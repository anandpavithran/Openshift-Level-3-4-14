---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 6
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
      - name: init
        image: registry.ocp4.example.com:8443/redhattraining/hello-nginx:v1.0
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -vxc
        - 'sleep "$((${RANDOM}/1024))"'
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      containers:
      - name: nginx
        image: registry.ocp4.example.com:8443/redhattraining/hello-nginx:v1.0
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -euc
        - 'sleep "$((${RANDOM}/1024))" ; exec nginx -g "daemon off;"'
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        startupProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 3
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 10
        livenessProbe:
          tcpSocket:
            port: http
          failureThreshold: 1
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
